spring:
  application:
    # 应用名称
    name: gateway
  cloud:
    # 使用 Naoos 作为服务注册发现
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
        #默认public
#        namespace: 8c7fd0f4-628d-4dd0-9d57-b8120eacab40
      config:
        serverAddr: 127.0.0.1:8848
        namespace: 8c7fd0f4-628d-4dd0-9d57-b8120eacab40
#        namespace: @nacos.namespace@
    # 使用 Sentinel 作为熔断器
    sentinel:
      transport:
        port: 8721
        dashboard: 127.0.0.1:8081
    # 路由网关配置
    gateway:
      discovery:
        locator:
          #开启从注册中心动态创建路由的功能，利用微服务名进行路由。如http://127.0.0.1:9000/consumer/echo/app/name?token=1
          enabled: false
      # 配置路由规则
      routes:
        # consumer配置到本地。采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）
        - id: consumer
          # 采用 LoadBalanceClient 方式请求，以 lb:// 开头，后面的是注册在 Nacos 上的服务名
          uri: lb://consumer
          # Predicate 翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法
          predicates:
            # Method 方法谓词，这里是匹配 GET 和 POST 请求
            - Method=GET,POST
            # http://127.0.0.1:9000/c/echo/app/name?token=1
            - Path=/c/**
          filters:
            - StripPrefix=1

# provider配置到nacos，使用动态路由

#        - id: NACOS-CONSUMER-FEIGN
#          uri: lb://nacos-consumer-feign
#          predicates:
#            - Method=GET,POST

# 动态路由配置
route:
  dynamic:
    enabled: true
    #dataId 可以从Environment中获取然后拼接
    dataId: gateway-dev.yaml
    #可以从NacosConfigProperties getGroup方法获取
    group: DEFAULT_GROUP

server:
  port: 9000


# 配置日志级别，方别调试
logging:
  level:
    org.springframework.cloud.gateway: debug